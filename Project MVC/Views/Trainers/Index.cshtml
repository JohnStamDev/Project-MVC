@using PagedList.Mvc;
@model PagedList.IPagedList<Project_MVC.Models.Trainer>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Trainers";
}

<h2>Trainers</h2>

<p>
    @Html.ActionLink("Create New", "Create", null,new { @class = "btn btn-primary btn-outline-dark" })
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-light btn-outline-dark"/>
        </p>
    </div>
</form>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Subject", "Index", new { sortOrder = ViewBag.SubjectSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subject)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new{@class= "btn btn-primary btn-outline-dark" }) |
                @Html.ActionLink("Details", "Details",null, new { id = item.ID },new{@class = "btn btn-primary btn-outline-dark" }) |
                @Html.ActionLink("Delete", "Delete",null, new { id = item.ID },new{ @class = "btn btn-danger btn-outline-dark" })
            </td>
        </tr>
    }
</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page=> Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))